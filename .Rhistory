predict(lm3)
predict(30, lm3)
predict(lm3, 30)
?predict
new <- data.frame(x = seq(30, 50, 5))
View(new)
predict(lm3, new, se.fit = TRUE)
df
View(df)
new <- data.frame(x = seq(30, 50, 5), header = "WEIGHT")
new
new <- data.frame(x = seq(30, 50, 5))
new
new <- data.frame(WEIGHT = seq(30, 50, 5))
new
View(new)
predict(lm3, new, se.fit = TRUE)
predict(lm3, new, se.fit = FALSE)
predict(lm1, new, se.fit = FALSE)
predict(lm1, new, se.fit = FALSE)
View(df)
new1 <- data.frame(VOLUME = seq(120, 160, 10), WEIGHT = seq(30, 50, 5))
predict(lm1, new, se.fit = FALSE)
View(new1)
View(new1)
predict(lm1, new1, se.fit = FALSE)
predict(lm3, new, se.fit = FALSE)
predict(lm1, new1, se.fit = FALSE)
new2 <- data.frame(VOLUME = 170, WEIGHT = 52.2)
predict(lm1, new2, se.fit = FALSE)
predict(lm1, new2, se.fit = TRUE)
new2 <- data.frame(VOLUME = 120, WEIGHT = 40)
predict(lm1, new2, se.fit = TRUE)
predict(lm1, new2, se.fit = FALSE)
lm1
df <- read.table(file = "c://ukunit.data.txt", header = T, dec = ",");
df <- na.omit(df)
str(df)
df
lm1 <- lm(PRICE ~ . ,data = df)
summary(lm1)
x11():plot(sort(cooks.distance(lm1)))
lm2 <- lm(PRICE ~ VOLUME, data = df)
summary(lm2)
lm3 <- lm(PRICE ~ WEIGHT, data = df)
summary(lm3)
summary(lm1)
summary(lm3)
anova(lm1, lm3)
new <- data.frame(WEIGHT = seq(30, 50, 5))
new1 <- data.frame(VOLUME = seq(120, 160, 10), WEIGHT = seq(30, 50, 5))
new2 <- data.frame(VOLUME = 120, WEIGHT = 40)
predict(lm3, new, se.fit = FALSE)
predict(lm1, new1, se.fit = FALSE)
predict(lm1, new2, se.fit = FALSE)
df <- read.table(file = "c://ukunit.data.txt", header = T, dec = ",");
df <- na.omit(df)
str(df)
df
x11():
par(mfrow = c(1,5))
hist(df$LENGTH, main ="LENGTH");
hist(df$WIDTH, main ="WIDTH");
hist(df$HEIGHT, main ="HEIGHT");
hist(df$WEIGHT, main = "WEIGHT");
hist(df$PRICE, main = "PRICE");
lm1 <- lm(PRICE ~ . ,data = df)
summary(lm1)
x11():plot(sort(cooks.distance(lm1)))
df <- df[-which.max(cooks.distance(lm1)),]
lm1 <- lm(PRICE ~ . ,data = df)
summary(lm1)
x11():plot(sort(cooks.distance(lm1)))
df <- read.table(file = "c://ukunit.data.txt", header = T, dec = ",");
df <- na.omit(df)
str(df)
df
lm1 <- lm(PRICE ~ . ,data = df)
summary(lm1)
lm2 <- lm(PRICE ~ WEIGHT, data = df)
summary(lm3)
lm2 <- lm(PRICE ~ WEIGHT, data = df)
summary(lm2)
anova(lm1, lm2)
new <- data.frame(LENGTH = 14.47, WIDTH = 2.8, HEIGHT = 3.8, WEIGHT = 36)
new2 <- data.frame(WEIGHT = 36)
new1 <- data.frame(WEIGHT = 36)
predict(lm1, new, se.fit = FALSE)
predict(lm2, new1, se.fit = FALSE)
summary(lm1)
summary(lm2)
new <- data.frame(LENGTH = 14.47, WIDTH = 2.8, HEIGHT = 3.8, WEIGHT = 36)
new1 <- data.frame(WEIGHT = 36)
predict(lm1, new, se.fit = FALSE)
predict(lm2, new1, se.fit = FALSE)
lm3 <- lm(PRICE ~ LENGTH+WIDTH+WEIGHT, data = df)
summary(lm3)
new2 <- data.frame(LENGTH = 14.47, WIDTH = 2.8, WEIGHT = 36)
predict(lem3, new2)
predict(lm3, new2)
predict(lm1, new, se.fit = FALSE)
predict(lm2, new1, se.fit = FALSE)
predict(lm3, new2)
new1 <- data.frame(WEIGHT = c(36,39, 19,5, 30))
predict(lm2, new1, se.fit = FALSE)
?scatterplot
scatter
?scatter
?splot
?plot
plot(df$WEIGHT, df$PRICE)
plot(df$LENGTH, df$PRICE)
plot(df$WIDTH, df$PRICE)
plot(df$HEIGHT, df$PRICE)
plot(df$WEIGHT, df$PRICE)
plot(df$LENGTH, df$PRICE)
plot(df$WIDTH, df$PRICE)
plot(df$WEIGHT, df$PRICE)
plot(df$LENGTH, df$PRICE)
plot(df$WEIGHT, df$PRICE)
x <- list(2,"a","b", TRUE)
x[[2]]
x[2]
x <- 1:4
y <- 2
x + y
x <- c(17,14,4,5,13,12,10)
x[x >= 11]<-4
x
d <- read.csv("c://hw1_data.csv")
d
names(d)
d[length(d-1):length(d),]
d[,length(d-1):length(d)]
d[152:153,]
d[47,]
bad <- is.na(d[,1])
bad
l <- d[,1]
l
d
l
bad <- is.na(l)
bad
good <- l[!bad]
good
length(good)
153-116
colMean(d[1,])
mean(d[1,])
mean(good)
df <- d[[d>31],]
df <- d[d>31,]
d
df
good <- complete.cases(d)
d[good,]
d
mean(d[good,])
mean(d[good,])
mean(d[good,][1,])
df<-d[good,]
mean(df[1,])
d
names(d)
d$month
d$Month
l<- d[d$Month == 5]
m <- d$Month == 5
m
df <- d[m,]
df
max <- max(df$Temp)
max
max <- max(df$Ozone)
max
max <- max(df[$Ozone]1,])
max <- max(df[1,])
max
df
max <- max(df[1,])
df
max <- max(df[,1])
max
na.omit(df)
max <- max(df[,1])
max
max <- max(df$ozone)
max <- max(df$Ozone)
max
df
dff <- na.omit(df)
max <- max(dff$Ozone)
max
m <- d$Month == 6
m
df <- d[m,]
df
dff <- na.omit(df)
dff
df <- d[m,]
df
dff <- na.omit(df$Temp)
dff
mean(dff)
m <- c(d$Ozone > 31, Temp > 90)
m <- c(d$Ozone > 31, d$Temp > 90)
m
df <- d[m,]
df
dff <- na.omit(df$Solar.R)
mean(dff)
m <- c(d$Ozone > 31, d$Temp > 90)
m
df <- d[m,]
df
mean(dff)
x <- c(0.5, 0.6)
x
x <- c(TRUE, FALSE)
x
type(x)
class(x)
x <- c(0.5, 0.6)
x
x
class(x)
y <- c(1.5, "a")
class(y)
y <- c(y, TRUE)
y
x <- as.numeric(y[1])
x
x <- 1:6
class(x)
as.logical(x)
x <- 0:3
x
as.logical(x)
as.character(x)
as.complex(x)
x <- c("a", "b")
x
as.numeric(x)
x <- list(1, "a", TRUE, 1 + 5i)
x
y <- x[4]
y
y <- as.complex(x[4])
y
y <- x[4]
class(y)
as.complex(y)
class(y)
y <- as.complex(y)
y
class(y)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m$dim
d$dim[1]
m$dim[1]
m&dim[1]
m <- 1:6
m
m <- matrix(1:6, 2, 3)
m
m <- 1:6
dim(m) <- c(2,3)
m\
m
x <- 1:3
y <- 10:12
cbind(x,y)
rbind(x,y)
clear
clear()
demo()
df <- read.csv("C:\Users\Бригада\Downloads\New\R\hw1_data.csv")
df <- read.table("C:\Users\Бригада\Downloads\New\R\hw1_data.csv")
df <- read.table("C:\Temp\hw1_data.csv")
?read.table
df <- read.csv("C:\Temp\hw1_data.csv")
df <- read.csv("C:\Temp\hw1_data.csv", header = TRUE)
df <- read.table("C:\Temp\hw1_data.csv", header = TRUE)
data <- read.table("c:\Temp\hw1_data.csv")
data <- read.csv("c:\Temp\hw1_data.csv")
data <- read.csv("c:\\Temp\hw1_data.csv")
data <- read.csv("c:\\Temp\\hw1_data.csv")
data
names(data)
data[1:2,]
?rows
?rowcount
?nrow
nrow(data)
data[nrow(data)-1:nrow(data),]
data
data[nrow(data)-1,]
data[nrow(data)-1:nrow(data),]
data[nrow(data)-1:nrow(data)-0,]
data[nrow(data)-1:nrow(data)-2,]
data[nrow(data):nrow(data)-1,]
data[nrow(data):nrow(data)-2,]
data[152:153,]
length(data)
data[47,]
bad <- is.na(data[,1])
bad
x <- bad[TRUE]
x
x <- bad[[TRUE]]
x
x <- as.factor(bad)
x
names(x)
name(x)
table(x)
newdata <- data[!bad]
newdata <- data[!bad,]
newdata
data
newdata
data
newdata
x <- mean(newdata[1,])
newdata[1,]
newdata[,1]
x <- mean(newdata[,1])
x
sub <- newdata[["Ozone">31]]
sub
sub <- newdata["Ozone">31]
sub
sub <- newdata["Ozone">31,]
sub
sub <- newdata[["Ozone">31,]
sub
sub <- newdata[["Ozone">31]
sub
sub <- newdata["Ozone">31]
sub
sub <- newdata["Ozone">31]
sub <- newdata[,"Ozone">31]
sub
a <- newdata[,1]
a
b <- a[a > 31]
b
a <- newdata[[,1]]
a <- newdata[,1 > 31]
a
a <- newdata["Ozone">31]
a
a <- newdata[newdata["Ozone">31]}
a <- newdata[newdata["Ozone">31]]
a <- newdata[newdata["Ozone">31,]]
a <- subset(newdata, Ozone > 31)
a
a <- subset(newdata, c(Ozone > 31, Temp > 90))
a
a <- 0
a <- subset(newdata, c(Ozone > 31, Temp > 90))
a
View(a)
b <- subset(newdata, c(Ozone > 31, Temp > 90))
b
b <- b[!is.na(b)]
b
b <- subset(newdata, c(Ozone > 31, Temp > 90))
b <- b[!is.na(b),]
b
b <- subset(newdata, c(Ozone > 31, Temp > 90))
b
View(b)
newdata
b <- subset(newdata, Ozone > 31 & Temp > 90)
b
c <- mean(b[,2])
c
b <- subset(data, Month = 6)
b
b <- subset(data, Month == 6)
b
c <- mean(b[,4])
c
b <- subset(data, Month == 5)
b
c <- max(b[,1])
c
b <- subset(newdata, Month == 5)
b
c <- max(b[,1])
c
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
mydata <- rnorm(100)
sd(mydata)
sd(mydata, na.rm = TRUE)
mydata <- c(mydata, NA)
sd(mydata, na.rm = TRUE)
sd(mydata, na.rm = FALSE)
argumets(lm)
args(ln)
args(lm)
attributes(lm)
x <- list(a = c(1,2,3), b = 4:6)
attributes(x)
2^2
2**2
@^3
2^3
2**3
?'...'
?paste
paste(c(1,2), c("a", "b"), 2:3, 3.15, sep = " ")
paste("a", "b")
paste("a", "b", sep = ":")
seq(1.7, 1.9, len = 10)
seq(1, 2, 10)
seq(1, 2, length =10)
seq(1, 2, length = 9)
cube <- function (x, n) {}
cube <- function (x, n) { x^3}
cube <- function (x, n) {
x^3
}
cube(3)
x <- 1:10
if (x < 5) { x <- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
clean()
clean
clear()
rankCompany <- function(num) {
result <- data.frame()
if (num == "best") {
result <- do.call(rbind, by(df1, df1[,2], head, 1))
} else if (num == "worst") {
result <- do.call(rbind, by(df1, df1[,2], tail, 1))
} else {
result <- merge(result, data.frame(Category = df1[,2], Ranking = num), all.y = TRUE)
}
result
}
rankCompany(num = "worst")
getwd()
setwd("C:/Users/Бригада/Downloads/New/R/PrAssn3/ProgrammingAssignment3")
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- "pneumonia"
diseas <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
num = "best"
result <- data.frame()
df1 <- data.frame()
#2 name, 7 state, 23 pneumonia
df1 <- df[complete.cases(suppressWarnings(as.numeric(df[,diseas]))),c(2, 7, 23)]
df1[,3] <- as.numeric(df1[,3])
df1[,2] <- as.factor(df1[,2])
df1 <- df1[order(df1[,2],df1[,3],df1[,1]),]
str(df1)
names(df1)[3]<-"Pneumonia"
head(df1, 15)
res <- data.frame()
rankCompany <- function(num) {
result <- data.frame()
if (num == "best") {
result <- do.call(rbind, by(df1, df1[,2], head, 1))
} else if (num == "worst") {
result <- do.call(rbind, by(df1, df1[,2], tail, 1))
} else {
result <- merge(result, data.frame(Category = df1[,2], Ranking = num), all.y = TRUE)
}
result
}
rankCompany(num = "worst")
rankCompany(num = "best")
data <- data.frame(
x=rnorm(25),
y=rnorm(25),
g=rep(factor(LETTERS[1:5]), 5)
)
data
data <- data[order(data[,3]),]
data
X <- split(data, data$g)
str(X)
X$A
l <- split(df1, df1[,2])
str(l)
